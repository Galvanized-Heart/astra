hydra:
  run:
    dir: outputs/${now:%Y-%m-%d}/${now:%H-%M-%S}
  sweep:
    dir: multirun/${now:%Y-%m-%d}/${now:%H-%M-%S}
    subdir: ${hydra.job.num}
  launcher:
    _target_: hydra._internal.core_plugins.basic_launcher.BasicLauncher
  sweeper:
    _target_: hydra._internal.core_plugins.basic_sweeper.BasicSweeper
    max_batch_size: null
    params: null
  help:
    app_name: ${hydra.job.name}
    header: '${hydra.help.app_name} is powered by Hydra.

      '
    footer: 'Powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help

      '
    template: '${hydra.help.header}

      == Configuration groups ==

      Compose your configuration from those groups (group=option)


      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (foo.bar=value)


      $CONFIG


      ${hydra.help.footer}

      '
  hydra_help:
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
    hydra_help: ???
  hydra_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][HYDRA] %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers:
      - console
    loggers:
      logging_example:
        level: DEBUG
    disable_existing_loggers: false
  job_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][%(name)s][%(levelname)s] - %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
      file:
        class: logging.FileHandler
        formatter: simple
        filename: ${hydra.runtime.output_dir}/${hydra.job.name}.log
    root:
      level: INFO
      handlers:
      - console
      - file
    disable_existing_loggers: false
  env: {}
  mode: MULTIRUN
  searchpath: []
  callbacks: {}
  output_subdir: .hydra
  overrides:
    hydra:
    - hydra.mode=MULTIRUN
    task:
    - experiment_mode=multi_task/advanced,multi_task/basic,multi_task/direct,single_task/kcat_only
  job:
    name: hydra_train
    chdir: null
    override_dirname: experiment_mode=multi_task/advanced,multi_task/basic,multi_task/direct,single_task/kcat_only
    id: ???
    num: ???
    config_name: config
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys: []
  runtime:
    version: 1.3.2
    version_base: '1.3'
    cwd: /gpfs/fs0/scratch/m/mahadeva/maxkirby/astra
    config_sources:
    - path: hydra.conf
      schema: pkg
      provider: hydra
    - path: /gpfs/fs0/scratch/m/mahadeva/maxkirby/astra/conf
      schema: file
      provider: main
    - path: ''
      schema: structured
      provider: schema
    output_dir: ???
    choices:
      experiment_mode: multi_task/basic
      ligand_featurizer: morgan
      protein_featurizer: esm
      lr_scheduler: plateau
      architecture: linear
      data: hpo
      recomposition: basic
      loss: masked_mse
      target_columns: all
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: default
      hydra/hydra_logging: default
      hydra/hydra_help: default
      hydra/help: default
      hydra/sweeper: basic
      hydra/launcher: basic
      hydra/output: default
  verbose: false
target_columns:
- kcat
- KM
- Ki
loss:
  name: MaskedMSELoss
  params:
    weights:
    - 0.33
    - 0.33
    - 0.33
recomposition:
  recomposition_func: BasicRecomp
data:
  train_path: data/split/hpo_splits_balanced/hpo_train.csv
  valid_path: data/split/hpo_splits_balanced/hpo_valid.csv
  tag: hpo_split
  batch_size: 64
  featurizer_batch_size: 128
  target_columns: ${target_columns}
  target_transform: log10
architecture:
  name: LinearBaselineModel
  params:
    dim_1: 32
    dim_2: 64
lr_scheduler:
  name: ReduceLROnPlateau
  params:
    monitor: valid_loss_epoch
    mode: min
    factor: 0.1
    patience: 3
protein_featurizer:
  name: ESMFeaturizer
  params:
    model_name: facebook/esm2_t33_650M_UR50D
    max_length: 1022
ligand_featurizer:
  name: MorganFeaturizer
  params:
    radius: 2
    fp_size: 2048
tags:
- ${target_columns}
- ${recomposition.recomposition_func}
- ${data.tag}
- ${architecture.name}
- ${protein_featurizer.name}
- ${ligand_featurizer.name}
seed: 42
project_name: astra
featurizers:
  protein: ${protein_featurizer}
  ligand: ${ligand_featurizer}
model:
  architecture: ${architecture}
  lightning_module:
    lr: 0.001
    optimizer: AdamW
    loss_function: ${loss}
    recomposition_func: ${recomposition.recomposition_func}
    lr_scheduler: ${lr_scheduler}
trainer:
  epochs: 20
  device: auto
  callbacks:
    checkpoint:
      monitor: valid_loss_epoch
      save_top_k: 1
      mode: min
