[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "astra"
version = "0.1.0"
description = "Machine learning project for predicting enzyme kinetic parameters."
readme = "README.md"
authors = [
    { name = "Maxim Kirby", email = "maxim.kirby@mail.utoronto.ca" }
]
requires-python = ">=3.11"
dependencies = [
    "bs4>=0.0.2",
    "click>=8.2.1",
    "lightning>=2.5.2",
    "lxml>=6.0.0",
    "matplotlib>=3.10.3",
    "numpy>=2.3.1",
    "pandas>=2.3.0",
    "pyyaml>=6.0.2",
    "rdkit>=2025.3.3",
    "requests>=2.32.4",
    "safetensors>=0.5.3",
    "sbmlxdf>=1.0.3",
    "scikit-learn>=1.7.0",
    "tdqm>=0.0.1",
    "torch>=2.7.1",
    "transformers>=4.53.2",
    "wandb>=0.21.0",
    "xgboost>=3.0.2",
    "xmltodict>=0.14.2",
]

[dependency-groups]
dev = [
    "astra",
    "ipykernel>=6.29.5",
    "pytest>=8.4.1",
    "ruff>=0.12.0",
]

[project.scripts]
astra = "astra.main:cli"

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
# E, F: Standard pyflakes/pycodestyle errors
# I: isort for import sorting
# B: flake8-bugbear finds likely bugs
# UP: pyupgrade upgrades syntax to modern versions
# SIM: flake8-simplify suggests simplifications
select = ["E", "F", "I", "B", "UP", "SIM"]

# Ignore E501 (line-too-long). 
# This is often handled by the formatter automatically.
ignore = ["E501"]

[tool.ruff.lint.isort]
# Label Astra as local code in ruff sorter.
known-first-party = ["astra"]

[tool.ruff.format]
# Enforce double quotes for strings.
quote-style = "double"
# Format code snippets inside your docstrings.
docstring-code-format = true

[tool.uv.sources]
astra = { workspace = true }
